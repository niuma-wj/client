-- 描述：比鸡单个玩家的结算数据界面脚本
-- 作者：wujian
-- 邮箱：393817707@qq.com
-- 日期：2024.12.28

local base = require 'BehaviourBase';
local Poker = require 'Common.Poker';
local pok_def = require 'Common.PokerDefines';

local _module = setmetatable({}, { __index = base });

function _module:Awake()
	local obj = self.gameObject;
    local child = obj.transform:Find("HeadTexture");
    local child1 = nil;
    if (child ~= nil) then
        self._headTexture = child.gameObject;
        child1 = child:Find("FangZhu");
        if (child1 ~= nil) then
            self._owner = child1.gameObject;
        end
    end
    child = obj.transform:Find("TextName");
    if (child ~= nil) then
        self._textName = child.gameObject;
    end
    child = obj.transform:Find("TextScore");
    if (child ~= nil) then
        self._textScore = child.gameObject;
    end
    child = obj.transform:Find("TextGold");
    if (child ~= nil) then
        self._textGold = child.gameObject;
    end
    self._qiPais = {};
    self._cards = {};
    self._qiPaiTips = {};
    self._rewards = {};
    self._genres = {};
    self._scores = {};
    self._dunScores = {};
    for i = 1, 3 do
        child = obj.transform:Find("Dun" .. i);
        if (child ~= nil) then
            for j = 1, 3 do
                child1 = child:Find("QiPai" .. j);
                if (child1 ~= nil) then
                    table.insert(self._qiPais, child1.gameObject);
                end
                child1 = child:Find("Card" .. j);
                if (child1 ~= nil) then
                    table.insert(self._cards, child1.gameObject);
                end
            end
            child1 = child:Find("QiPaiTip");
            if (child1 ~= nil) then
                table.insert(self._qiPaiTips, child1.gameObject);
            end
            child1 = child:Find("Genre");
            if (child1 ~= nil) then
                table.insert(self._genres, child1.gameObject);
            end
            child1 = child:Find("Score");
            if (child1 ~= nil) then
                table.insert(self._scores, child1.gameObject);
                child1 = child1:Find("TextScore");
                if (child1 ~= nil) then
                    table.insert(self._dunScores, child1.gameObject);
                end
            end
        end
    end
    for i = 1, 4 do
        child = obj.transform:Find("Reward" .. i);
        if (child ~= nil) then
            table.insert(self._rewards, child.gameObject);
        end
    end
end

function _module:Start()
    self._sprites = {};
	local sl = self.gameObject:GetComponent("SpriteList");
	for i = 0, 13 do
		table.insert(self._sprites, sl:GetSprite(i));
	end
end

function _module:Show(s)
    self.gameObject:SetActive(s);
end

function _module:SetRoom(r)
	self._room = r;
end

function _module:SetName(name)
    if (self._textName ~= nil) then
        CS.NiuMa.LuaUGUI.SetText(self._textName, name);
    end
end

function _module:SetHeadTexture(tex)
    if (self._headTexture ~= nil) then
        CS.NiuMa.LuaUGUI.SetTexture(self._headTexture, tex);
    end
end

function _module:SetOwner(s)
    if (self._owner ~= nil) then
        self._owner:SetActive(s);
    end
end

function _module:ClearCardObjs()
	if (self._cardObjs ~= nil) then
		for i, v in ipairs(self._cardObjs) do
			if (v ~= nil) then
				CS.UnityEngine.GameObject.Destroy(v);
			end
        end
    end
    self._cardObjs = {};
end

function _module:GetGenreSprite(genre)
	if (pok_def.BiJiGenre.Triple == genre) then
		return self._sprites[1];
	elseif (pok_def.BiJiGenre.FlushStraight == genre) then
		return self._sprites[2];
	elseif (pok_def.BiJiGenre.Flush == genre) then
		return self._sprites[3];
	elseif (pok_def.BiJiGenre.Straight == genre) then
		return self._sprites[4];
	elseif (pok_def.BiJiGenre.Pair == genre) then
		return self._sprites[5];
	elseif (pok_def.BiJiGenre.Single == genre) then
		return self._sprites[6];
	end
	return nil;
end

function _module:SetSettlement(data)
    local ui = CS.NiuMa.LuaUGUI;
    local Color = CS.UnityEngine.Color;
    if (self._textScore ~= nil) then
        if (data.totalScore < 0) then
            ui.SetText(self._textScore, "得分:" .. tostring(data.totalScore));
            ui.SetTextColor(self._textScore, Color(0.07, 0.73, 0.22, 1.0));
        else
            ui.SetText(self._textScore, "得分:+" .. tostring(data.totalScore));
            ui.SetTextColor(self._textScore, Color(0.73, 0.22, 0.07, 1.0));
        end
    end
    if (self._textGold ~= nil) then
        if (data.winGold < 0) then
            ui.SetText(self._textGold, "金币:" .. tostring(data.winGold));
            ui.SetTextColor(self._textGold, Color(0.07, 0.73, 0.22, 1.0));
        else
            ui.SetText(self._textGold, "金币:+" .. tostring(data.winGold));
            ui.SetTextColor(self._textGold, Color(0.73, 0.22, 0.07, 1.0));
        end
    end
    self:ClearCardObjs();
    for i = 1, 9 do
        if (self._qiPais[i] ~= nil) then
            self._qiPais[i]:SetActive(data.qiPai);
        end
    end
    for i = 1, 3 do
        if (self._qiPaiTips[i] ~= nil) then
            self._qiPaiTips[i]:SetActive(data.qiPai);
        end
        if (self._genres[i] ~= nil) then
            self._genres[i]:SetActive(not data.qiPai);
        end
    end
    for i = 1, 3 do
        if (self._dunScores[i] ~= nil) then
            if (data.dunScores[i] < 0) then
                ui.SetText(self._dunScores[i], tostring(data.dunScores[i]));
            else
                ui.SetText(self._dunScores[i], "+" .. tostring(data.dunScores[i]));
            end
        end
    end
    local GameObject = CS.UnityEngine.GameObject;
    local Vector2 = CS.UnityEngine.Vector2;
    if (not data.qiPai) then
        local prefab = nil;
		local obj = nil;
		for i = 1, 9 do
            local c = Poker.FromInt32Ex(data.cards[i]);
			prefab = self._room:GetPokerPrefab(c);
			if (prefab ~= nil) then
				obj = GameObject.Instantiate(prefab, self._cards[i].transform);
				if (obj ~= nil) then
					obj.transform.anchoredPosition = Vector2(0.0, 0.0);
                    table.insert(self._cardObjs, obj);
				end
			end
		end
        for i = 1, 3 do
            if (self._genres[i] ~= nil) then
                local sp = self:GetGenreSprite(data.genres[i]);
		        ui.SetImage(self._genres[i], sp);
            end
        end
    end
    self:SetRewardType(data.rewardType);
end

function _module:GetRewardSprite(rewardType)
    local util = CS.NiuMa.Utility;
    if (util.BitwiseAndEqual(rewardType, pok_def.BiJiRewardType.TongGuan)) then
        return self._sprites[7];
    end
    if (util.BitwiseAndEqual(rewardType, pok_def.BiJiRewardType.QuanSanTiao)) then
        return self._sprites[8];
    end
    if (util.BitwiseAndEqual(rewardType, pok_def.BiJiRewardType.QuanShuanZi)) then
        return self._sprites[9];
    end
    if (util.BitwiseAndEqual(rewardType, pok_def.BiJiRewardType.QuanHeiSe)) then
        return self._sprites[12];
    end
    if (util.BitwiseAndEqual(rewardType, pok_def.BiJiRewardType.QuanHongSe)) then
        return self._sprites[13];
    end
    if (util.BitwiseAndEqual(rewardType, pok_def.BiJiRewardType.ShuangTongHuaShun)) then
        return self._sprites[11];
    end
end

function _module:SetRewardType(rewardType)
    local rewardTypes =
    {
        pok_def.BiJiRewardType.TongGuan,
        pok_def.BiJiRewardType.QuanSanTiao,
        pok_def.BiJiRewardType.QuanShuanZi,
        pok_def.BiJiRewardType.QuanHeiSe,
        pok_def.BiJiRewardType.QuanHongSe,
        pok_def.BiJiRewardType.ShuangTongHuaShun
    };
    local nums = 1;
    local ui = CS.NiuMa.LuaUGUI;
    local util = CS.NiuMa.Utility;
    for i = 1, 6 do
        if ((self._rewards[nums] ~= nil) and util.BitwiseAndEqual(rewardType, rewardTypes[i])) then
            local sp = self:GetRewardSprite(rewardTypes[i]);
            if (sp ~= nil) then
                self._rewards[nums]:SetActive(true);
                ui.SetImage(self._rewards[nums], sp);
                nums = nums + 1;
            end
        end
        if (nums >= 4) then
            break;
        end
    end
    for i = nums, 4 do
        if (self._rewards[i] ~= nil) then
            self._rewards[i]:SetActive(false);
        end
    end
end

function _module.NewInstance()
    local t = setmetatable({}, { __index = _module });
    return t;
end

return _module;