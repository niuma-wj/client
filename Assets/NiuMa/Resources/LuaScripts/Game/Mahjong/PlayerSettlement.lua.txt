-- 描述：麻将玩家结算数据模块
-- 作者：wujian
-- 邮箱：393817707@qq.com
-- 日期：2024.12.10

local base = require 'BehaviourBase';
local mah_def = require 'Game.Mahjong.MahjongDefines';

local _module = setmetatable({}, { __index = base });

function _module:Awake()
	local obj = self.gameObject;
    local child = obj.transform:Find("DianPao");
    if (child ~= nil) then
        self._dianPao = child.gameObject;
    end
    child = obj.transform:Find("FangPao");
    if (child ~= nil) then
        self._fangPao = child.gameObject;
    end
    child = obj.transform:Find("ZiMo");
    if (child ~= nil) then
        self._ziMo = child.gameObject;
    end
    child = obj.transform:Find("Banker");
    if (child ~= nil) then
        self._banker = child.gameObject;
    end
    child = obj.transform:Find("TextName");
    if (child ~= nil) then
        self._textName = child.gameObject;
    end
    child = obj.transform:Find("TextHu");
    if (child ~= nil) then
        self._textHu = child.gameObject;
    end
    child = obj.transform:Find("TextScore");
    if (child ~= nil) then
        self._textScore = child.gameObject;
    end
    child = obj.transform:Find("TextWinGold");
    if (child ~= nil) then
        self._textWinGold = child.gameObject;
    end
    child = obj.transform:Find("Tiles");
    if (child ~= nil) then
        self._tilesParent = child;
    end
    child = obj.transform:Find("Hu");
    if (child ~= nil) then
        self._hu = child.gameObject;
    end
    local rm = CS.NiuMa.ResourceManager.Instance;
    self._downTilePrefab = rm:LoadResource("Prefabs/Game/Mahjong/Tiles/DownSouth", "prefabs/mahjong_tiles.ab", "Assets/NiuMa/Resources/", ".prefab");
    self._hideTilePrefab = rm:LoadResource("Prefabs/Game/Mahjong/Tiles/HideSouth", "prefabs/mahjong_tiles.ab", "Assets/NiuMa/Resources/", ".prefab");
    self._handTilePrefab = rm:LoadResource("Prefabs/Game/Mahjong/Tiles/HandSouth", "prefabs/mahjong_tiles.ab", "Assets/NiuMa/Resources/", ".prefab");
	self._tiles = {};
end

function _module:Start()
	self.gameObject:SetActive(false);
end

function _module:SetRoom(room)
    self._room = room;
end

function _module:SetPaver(paver)
    self._paver = paver;
end

function _module:SetMahjongSprites(obj)
    self._mahjongSprites = obj;
end

function _module:Show(s)
    self.gameObject:SetActive(s);
end

function _module:Clear()
    self:SetName("");
    self:SetHuText("");
    local ui = CS.NiuMa.LuaUGUI;
    if (self._textScore ~= nil) then
        ui.SetText(self._textScore, "");
    end
    if (self._textWinGold ~= nil) then
        ui.SetText(self._textWinGold, "");
    end
    self:SetSeal(-1);
    self:SetBanker(false);
    if (self._hu ~= nil) then
		self._hu:SetActive(false);
	end
    self:RemoveAllTiles();
end

function _module:SetName(name)
    if (self._textName ~= nil) then
        CS.NiuMa.LuaUGUI.SetText(self._textName, name);
    end
end

function _module:SetHuText(text)
    if (self._textHu ~= nil) then
        CS.NiuMa.LuaUGUI.SetText(self._textHu, text);
    end
end

function _module:SetSeal(s)
    if (self._dianPao ~= nil) then
        self._dianPao:SetActive(s == 0);
    end
    if (self._fangPao ~= nil) then
        self._fangPao:SetActive(s == 1);
    end
    if (self._ziMo ~= nil) then
        self._ziMo:SetActive(s == 2);
    end
end

function _module:SetBanker(s)
    if (self._banker ~= nil) then
        self._banker:SetActive(s);
    end
end

function _module:SetScore(score)
    if (self._textScore ~= nil) then
        CS.NiuMa.LuaUGUI.SetText(self._textScore, tostring(score));
    end
end

function _module:SetWinGold(gold)
    if (self._textWinGold ~= nil) then
        CS.NiuMa.LuaUGUI.SetText(self._textWinGold, tostring(gold));
    end
end

function _module:RemoveAllTiles()
    if (self._tiles == nil) then
        return;
    end
    for i, v in ipairs(self._tiles) do
        CS.UnityEngine.GameObject.Destroy(v);
    end
    self._tiles = {};
end

function _module:SetTiles(seat, chapters, handTiles, huTile, hu)
    self:RemoveAllTiles();
    if (self._tilesParent == nil) then
        return;
    end
    local x = -468.0;
    local y = -18.0;
    local deltaX = 50;
    local gapX = 10.0;
    local tileNums = 0;
    local tile = nil;
    local chapterType = 0;
    local positions = {};
    for i, v in ipairs(chapters) do
        for j = 1, 3 do
		    positions[j] = CS.UnityEngine.Vector2(x, y);
            x = x + deltaX;
	    end
        x = x + gapX;
        self:CreateChapter(v, positions, i, seat);
    end
    for i, v in ipairs(handTiles) do
        self:CreateHandTile(v, "hand"..i, x);
        x = x + deltaX;
    end
    if (hu and huTile ~= nil) then
		x = x + gapX;
        self:CreateHandTile(huTile, "hand_hu", x);
        if (self._hu ~= nil) then
            self._hu:SetActive(true);
            local rcTrans = self._hu.transform;
            if (rcTrans ~= nil) then
                rcTrans.anchoredPosition = CS.UnityEngine.Vector2(x, 20.0);
            end
        end
    end
end

function _module:CreateChapter(chapter, positions, idx, seat)
    if (chapter == nil) then
        return;
    end
    local tmp = 0;
	local hide = false;
    local gangY = 16.0;
    local tileNums = #(chapter.tiles);
    local chapterType = self._paver.GetChapterType(chapter);
    local prefab = nil;
    for i = 1, tileNums do
        if (chapterType == mah_def.MahjongChapter.AnGang) then
			hide = (i < 4);
		elseif (chapterType == mah_def.MahjongChapter.JiaGang) then
			hide = (i == 4);
		else
			hide = false;
		end
        if (hide) then
			prefab = self._hideTilePrefab;
		else
			prefab = self._downTilePrefab;
		end
        local obj = nil;
        if (prefab ~= nil) then
            obj = CS.UnityEngine.GameObject.Instantiate(prefab, self._tilesParent);
        end
        if (obj ~= nil) then
            obj.name = "chapter" .. idx .. "_" .. i;
			if (not hide) then
				local mb = obj:GetComponent("MahjongBrick");
				if (mb ~= nil) then
                    local tile = chapter.tiles[i];
					mb:SetMahjongSprites(self._mahjongSprites);
					mb:SetMahjongTile(tile.tile.pattern, tile.tile.number, tile.id);
				end
			end
            local rcTrans = obj.transform;
			if (rcTrans ~= nil) then
				if (i < 4) then
					rcTrans.anchoredPosition = positions[i];
				else
					if (chapterType == mah_def.MahjongChapter.AnGang) then
						positions[4] = positions[2];
					else
						tmp = self._paver.RelativePosition(seat, chapter.targetPlayer);
						print("seat:"..tostring(seat)..", target:"..tostring(chapter.targetPlayer)..", rel:"..tostring(tmp));
						positions[4] = positions[tmp];
					end
					positions[4].y = positions[4].y + gangY;
					rcTrans.anchoredPosition = positions[4];
				end
				rcTrans.localScale = CS.UnityEngine.Vector3(0.6, 0.6, 1.0);
			end
            tmp = #(self._tiles);
			self._tiles[tmp + 1] = obj;
        end
    end
end

function _module:CreateHandTile(tile, name, x)
    local obj = CS.UnityEngine.GameObject.Instantiate(self._handTilePrefab, self._tilesParent);
    if (obj ~= nil) then
        obj.name = name;--;
        local mb = obj:GetComponent("MahjongBrick");
		if (mb ~= nil) then
			mb:SetMahjongSprites(self._mahjongSprites);
			mb:SetMahjongTile(tile.tile.pattern, tile.tile.number, tile.id);
		end
        local rcTrans = obj.transform;
		if (rcTrans ~= nil) then
            rcTrans.anchoredPosition = CS.UnityEngine.Vector2(x, -18.0);
            rcTrans.localScale = CS.UnityEngine.Vector3(0.6, 0.6, 1.0);
        end
        tmp = #(self._tiles);
		self._tiles[tmp + 1] = obj;
    end
    return obj;
end

--因为PlayerSettlement被多个地方引用到，而每个引用的地方必须有独立的PlayerSettlement实例，因此外部不能直接引用_module，
--而是调用NewInstance函数创建实例
function _module.NewInstance()
    local t = setmetatable({}, { __index = _module });
    return t;
end

return _module;