syntax = "proto2";
import "UserData.proto";
import "Mahjong.proto";
import "Poker.proto";
import "Hive.proto";

message NetMsgCreateMahjongTable
{
	required sint32 Mode = 1;
	required sint32 DiZhu = 2;
	required sint32 Config = 3;

	extend NetMsgCreateTable
	{
		optional NetMsgCreateMahjongTable MahjongTable = 4;
	}
}

message MahjongTableTiles
{
	required bool HasFetch = 1;
	repeated sint32 HandTileNums = 2;
	required MahjongTile FetchTile = 3;
	repeated MahjongTile HandTiles = 4;
	repeated MahjongTile PlayedTiles1 = 5;
	repeated MahjongTile PlayedTiles2 = 6;
	repeated MahjongTile PlayedTiles3 = 7;
	repeated MahjongTile PlayedTiles4 = 8;
	repeated MahjongChapter Chapters1 = 9;
	repeated MahjongChapter Chapters2 = 10;
	repeated MahjongChapter Chapters3 = 11;
	repeated MahjongChapter Chapters4 = 12;
}

message NetMsgSyncMahjong
{
	required double Gold = 1;
	required sint32 Diamonds = 2;
	required sint32 Mode = 3;
	required float DiZhu = 4;
	required sint32 Chi = 5;
	required sint32 DianPao = 6;
	required sint32 Seat = 7;
	required sint32 RoundState = 8;
	required sint32 DisbandState = 9;
	optional sint32 Banker = 10;
	optional sint32 LeftTiles = 11;
	optional MahjongTableTiles TableTiles = 12;
}

message NetMsgPlayerJoined
{
	required sint32 UserID = 1;
	required sint32 Seat = 2;
	required double Gold = 3;
	required sint32 Diamonds = 4;
	required bool Offline = 5;
	required bool Ready = 6;
	required bool Authorize = 7;
	required bool JoinRound = 8;
	required UserData UserData = 9;
}

message FairMahjongSettlement
{
	repeated float WinGolds = 1;
	required MahjongSettlement Data = 2;
}

message NetMsgMahjongSettlement
{
	required bool Kick = 1;
	repeated double Golds = 2;
	required FairMahjongSettlement Data = 3;
}

message FairMahjongPlaybackData
{
	required MahjongPlaybackData Data1 = 1;
	required FairMahjongSettlement Data2 = 2;
}

message NetMsgMahjongPlayback
{
	required sint32 RoomType = 1;
	required sint32 RoomID = 2;
	required sint32 Mode = 3;
	required float DiZhu = 4;
	required sint32 Config = 5;
	required sint32 Banker = 6;
	repeated sint32 UserIDs = 7;
	repeated string Names = 8;
	repeated string HeadImgUrls = 9;
	required FairMahjongPlaybackData Data = 10;
}

message FairMahjongRecordPlayer
{
	required string HeadImgUrl = 1;
	required string NickName = 2;
	required sint32 Score = 3;
	required float WinGold = 4;
}

message FairMahjongRecord
{
	required string Code = 1;
	required sint32 RoomID = 2;
	required string Time = 3;
	repeated FairMahjongRecordPlayer Players = 4;
}

message NetMsgMahjongRecords
{
	required sint32 Start = 1;
	repeated FairMahjongRecord Records = 2;
}

message NetMsgCreateDepositTable
{
	required double Deposit = 1;
	required string Password = 2;

	extend NetMsgCreateTable
	{
		optional NetMsgCreateDepositTable DepositTable = 5;
	}
}

message NetMsgNiu100SyncTable
{
	required sint32 GameState = 1;
	required sint32 Banker = 2;
	required double Deposit = 3;
	required double Gold = 4;
	repeated double BetTotals = 5;
	repeated double MyBetAmounts = 6;
	repeated sint32 ChipNums = 7;
	required string BankerName = 8;
	required string BankerHeadImgUrl = 9;
}

message NetMsgNiu100Compare
{
	required sint32 Elapsed = 1;
	required double Gold = 2;
	required double Deposit = 3;
	repeated sint32 Multiples = 4;
	repeated double Scores = 5;
	repeated double BankerScores = 6;
	repeated double RankScores = 7;
	repeated double RankGolds = 8;
	repeated PokerGenre Genres = 9;
}

message NetMsgNiu100Settlement
{
	required double Score = 1;
	required double BankerScore = 2;
	repeated double WinnerScores = 3;
	repeated sint32 Winners = 4;
	repeated string WinnerNames = 5;
	repeated string WinnerHeadImgUrls = 6;
}

message NetMsgNiu100RankSeat
{
	repeated sint32 RankSeat = 1;
	repeated double Golds = 2;
	repeated string Names = 3;
	repeated string HeadImgUrls = 4;
}

message Niu100RankPlayer
{
	required sint32 UserID = 1;
	required double Gold = 2;
	required sint32 AccWins20 = 3;
	required double AccBets20 = 4;
	required string Name = 5;
	required string HeadImgUrl = 6;
}

message NetMsgNiu100RankList
{
	repeated Niu100RankPlayer Players = 1;
}

message BiJiTableInfo
{
	required sint32 Mode = 1;
	required float DiZhu = 2;

	extend TableRecord
	{
		optional BiJiTableInfo bi_ji_info = 12;
	}
}

message NetMsgCreateBiJiTable
{
	required sint32 Mode = 1;
	required sint32 DiZhu = 2;

	extend NetMsgCreateTable
	{
		optional NetMsgCreateBiJiTable BiJiTable = 6;
	}
}

message NetMsgBiJiSyncTable
{
	required sint32 Mode = 1;
	required float DiZhu = 2;
	required sint32 Seat = 3;
	required sint32 Commander = 4;
	required sint32 GameState = 5;
	required bool Disbanding = 6;
}

message NetMsgBiJiDealCard
{
	repeated PokerCard Cards = 1;
	repeated sint32 OrderRaw = 2;
	repeated sint32 OrderSuit = 3;
	required sint32 Elapsed = 4;
	required sint32 Diamonds = 5;
}

message NetMsgBiJiMakeDun
{
	required bool Animate = 1;
	repeated bool Duns = 2;
	repeated sint32 DunIDs1 = 3;
	repeated sint32 DunIDs2 = 4;
	repeated sint32 DunIDs3 = 5;
}

message DunResult
{
	required sint32 Seat = 1;
	repeated sint32 Cards = 2;
	required sint32 Genre = 3;
	required sint32 Score = 4;
}

message NetMsgBiJiResult
{
	required sint32 Dun = 1;
	required bool Animate = 2;
	repeated DunResult Results = 3;
}

message BiJiScore
{
	required sint32 Seat = 1;
	required sint32 Reward = 2;
	required sint32 Total = 3;
	required sint32 RewardType = 4;
}

message NetMsgBiJiAggregate
{
	required bool Animate = 1;
	repeated BiJiScore Scores = 2;
}

message BiJiSettlementPlayer
{
	required sint32 Seat = 1;
	repeated sint32 DunScores = 2;
	required sint32 TotalScore = 3;
	required double TotalGold = 4;
	required double Gold = 5;
	required sint32 RewardType = 6;
	repeated sint32 Cards = 7;
	repeated sint32 Genres = 8;
	required bool QiPai = 9;
}

message NetMsgBiJiSettlement
{
	required bool Kick = 1;
	repeated BiJiSettlementPlayer Players = 2;
}