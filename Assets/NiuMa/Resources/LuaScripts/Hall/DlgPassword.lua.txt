local base = require 'BehaviourBase';
local rapidjson = require('rapidjson');

local _module = setmetatable({}, { __index = base });

function _module:Awake()
    local obj = self.gameObject;
    local child = obj.transform:Find("Dialog");
    local child1 = nil;
    local ui = CS.NiuMa.LuaUGUI;
    if (child ~= nil) then
        child1 = child:Find("InputOld");
        if (child1 ~= nil) then
            self._inputOld = child1.gameObject;
        end
        child1 = child:Find("InputNew");
        if (child1 ~= nil) then
            self._inputNew = child1.gameObject;
        end
        child1 = child:Find("InputVerify");
        if (child1 ~= nil) then
            self._inputVerify = child1.gameObject;
        end
        child1 = child:Find("BtnOk");
        if (child1 ~= nil) then
            local func = self:OnOkClick();
            ui.AddBtnClick(child1.gameObject, func);
        end
        child1 = child:Find("BtnCancel");
        if (child1 ~= nil) then
            local func = self:OnCancelClick();
            ui.AddBtnClick(child1.gameObject, func);
        end
    end
    self._changing = false;
end

function _module:Show(s)
    self.gameObject:SetActive(s);
end

function _module:Clear()
    local ui = CS.NiuMa.LuaUGUI;
    if (self._inputOld ~= nil) then
        ui.SetInputText(self._inputOld, "");
    end
    if (self._inputNew ~= nil) then
        ui.SetInputText(self._inputNew, "");
    end
    if (self._inputVerify ~= nil) then
        ui.SetInputText(self._inputVerify, "");
    end
end

function _module:OnOkClick()
    --以函数闭包的方式保存当前self实例，注意此时self并不等于_module
    local inst = self;
    return function()
        local self = inst;
        local oldPwd = "";
        local newPwd = "";
        local verPwd = "";
        local ui = CS.NiuMa.LuaUGUI;
        local gm = CS.NiuMa.GameManager.Instance;
        if (self._changing) then
            return;
        end
        if (self._inputOld ~= nil) then
            oldPwd = ui.GetInputText(self._inputOld);
        end
        if (self._inputNew ~= nil) then
            newPwd = ui.GetInputText(self._inputNew);
        end
        if (self._inputVerify ~= nil) then
            verPwd = ui.GetInputText(self._inputVerify);
        end
        if (newPwd ~= verPwd) then
            gm:ShowPromptTip("两次输入的密码不相同", 2.0);
            return;
        end
        if (newPwd == nil or #newPwd == 0) then
            gm:ShowPromptTip("请输入新密码", 2.0);
            return;
        end
        local t = {};
        if (oldPwd ~= nil and #oldPwd > 0) then
            oldPwd = CS.NiuMa.AesUtil.Encrypt(oldPwd);
            t.oldPassword = oldPwd;
        end
        newPwd = CS.NiuMa.AesUtil.Encrypt(newPwd);
        t.newPassword = newPwd;
        -- 发送修改密码HTTP请求
        local body = rapidjson.encode(t);
        local func = self:OnPasswordRespone();
        gm:AuthPost("/player/capital/bank/password", body, func);
        self._changing = true;
    end
end

function _module:OnPasswordRespone()
    --以函数闭包的方式保存当前self实例，注意此时self并不等于_module
    local inst = self;
    return function(code, text)
        local self = inst;
        local gm = CS.NiuMa.GameManager.Instance;
        self._changing = false;
        if (code ~= 200) then
            local err;
            local t = rapidjson.decode(text);
            if (t.msg ~= nil) then
                err = t.msg;
            else
                err = text;
            end
            gm:ShowPromptTip("修改密码失败：" .. err, 2.0);
        else
            gm:ShowPromptTip("修改密码成功", 2.0);
            local self = _module;
            self:Show(false);
        end
    end
end

function _module:OnCancelClick()
    --以函数闭包的方式保存当前self实例，注意此时self并不等于_module
    local inst = self;
    return function()
        local self = inst;
        self:Show(false);
    end
end

--因为DlgPassword被多个地方引用到，而每个引用的地方必须有独立的DlgPassword实例，因此外部不能直接引用_module，
--而是调用NewInstance函数创建实例
function _module.NewInstance()
    local t = setmetatable({}, { __index = _module });
    return t;
end

return _module;